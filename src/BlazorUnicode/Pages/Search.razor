@page "/search"
@inject UnicodeCharacterDatabase Db
<h3>Search</h3>
<form>
    <div class="form-group mb-2">
        <label for="searchName">Search Name</label>
        <input type="text" class="form-control" id="searchName" placeholder="partial text" @bind="@SearchName" />
    </div>

    <div class="form-group mb-2">
        <label for="searchCharacter">Search Character</label>
        <input type="text" class="form-control" id="searchCharacter" placeholder="paste symbol, ex: λ" @bind="@SearchCharacter" />
    </div>
    
    <div class="form-group mb-2">
        <label for="maxResultCount">Max Result Count</label>
        <input type="number" class="form-control" id="maxResultCount" placeholder="paste symbol, ex: λ" @bind="@MaxResultCount" />
    </div>

    <button class="mb-2" @onclick="SearchUnicodeDatabase" @onclick:preventDefault>Search</button>

    <div class="horizontal-rule-dark mb-2"></div>

    <div>@Message</div>

    <div style="flex-flow:row;flex-wrap:wrap;">
        @foreach (var unicodeCharacter in UnicodeCharacterList)
        {
            <div style="display:inline-block; padding:5px; text-align:center; max-width:12em; height:100%; border: thin black solid">
                <CodePoint Code="@unicodeCharacter.CodePoint" ShowUnicodeName="true"></CodePoint>
            </div>
        }
    </div>
</form>

@code {
    [Parameter]
    public string SearchName { get; set; } = "";
    public string SearchCharacter { get; set; } = "";
    public string Message { get; set; } = "";
    public int MaxResultCount { get; set; } = 255;

    public List<UnicodeCharacter> UnicodeCharacterList { get; set; } = new();

    private void SearchUnicodeDatabase()
    {
        int numberFound = 0;

        UnicodeCharacterList.Clear();

        // SearchCharacter
        if (SearchCharacter.Length > 0)
        {
            var searchCharacterFound = Db
                .List
                .Where(x => x.CodePoint == SearchCharacter[0])
                .ToList();

            numberFound += searchCharacterFound.Count();

            var searchCharacterResult =
                searchCharacterFound
                .Take(MaxResultCount)
                .Select(x => x);

            UnicodeCharacterList.AddRange(searchCharacterResult);
        }

        // SearchName
        if (SearchName.Length > 0)
        {
            var searchName = SearchName.ToLower();

            var searchNameFound =
                Db.List
                .Where(x =>
                    x.Name.ToLower().Contains(searchName) ||
                    x.RangeName.ToLower().Contains(searchName)
                )
                .ToList();

            numberFound += searchNameFound.Count();

            var searchNameResult =
                searchNameFound
                .Take(MaxResultCount)
                .Select(x => x);

            UnicodeCharacterList.AddRange(searchNameResult);
        }

        Message = numberFound > MaxResultCount
            ? $"Result list truncated to {MaxResultCount}. Found {numberFound:N0} results."
            : "";
    }
}
